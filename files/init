#!/bin/sh

set -x

export PATH=/bin:/sbin

mkdir -p rootfs/target/ rootfs/target_tmp/{dev,proc,sys,mnt,debug_ramdisk,metadata,vendor,odm}
mount -o move /dev /target_tmp/dev
mount -o move /proc /target_tmp/proc
mount -o move /sys /target_tmp/sys
mount -o move /mnt /target_tmp/mnt
mount -o move /debug_ramdisk /target_tmp/debug_ramdisk
mount -o move /metadata /target_tmp/metadata
mount -o move /vendor /target_tmp/vendor
mount -o move /odm /target_tmp/odm

#for i in $(cat /proc/mounts |cut -d ' ' -f 2);do
#umount $i
#done
mount -t proc none /proc
mount -t sysfs none /sys
mount -t configfs none /config
mount -t tmpfs none /dev
mount -t tmpfs none /tmp
mount -t pstore none /sys/fs/pstore



find /vendor/firmware -name ipa\*

mdev -s
mdev -d

echo > /config/usb_gadget/g1/UDC
sleep 2
rm -Rf /config/usb_gadget/g1/configs
sleep 2
rm -Rf /config/usb_gadget/g1/configs
sleep 2
mkdir /config/usb_gadget/g1
echo 0x12d1 > /config/usb_gadget/g1/idVendor
echo 0x103A > /config/usb_gadget/g1/idProduct
mkdir -p /config/usb_gadget/g1/strings/0x409
echo phh > /config/usb_gadget/g1/strings/0x409/serialnumber
echo phh > /config/usb_gadget/g1/strings/0x409/manufacturer
echo phh > /config/usb_gadget/g1/strings/0x409/product

mkdir /config/usb_gadget/g1/functions/mass_storage.0
echo 1 > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/removable
#dd if=/dev/zero of=/tmp/tmp-img bs=1024 count=$((128*1024))
dmesg > /tmp/tmp-img
cat /sys/fs/pstore/* >> /tmp/tmp-img
echo /tmp/tmp-img > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/file

mkdir /config/usb_gadget/g1/functions/acm.0
mkdir /config/usb_gadget/g1/functions/ncm.0
mkdir /config/usb_gadget/g1/configs/c.1/
mkdir /config/usb_gadget/g1/configs/c.1/strings/0x409
echo 'ADB MTP' > /config/usb_gadget/g1/configs/c.1/strings/0x409/configuration
ln -s /config/usb_gadget/g1/functions/ncm.0 /config/usb_gadget/g1/configs/c.1/f1
ln -s /config/usb_gadget/g1/functions/mass_storage.0 /config/usb_gadget/g1/configs/c.1/f2
ln -s /config/usb_gadget/g1/functions/acm.0 /config/usb_gadget/g1/configs/c.1/f3
#ln -s /config/usb_gadget/g1/functions/gsi.rndis /config/usb_gadget/g1/configs/c.1/f3

echo -n V > /dev/watchdog
echo -n V > /dev/watchdog0
echo -n V > /dev/watchdog1

sleep 2
echo > /config/usb_gadget/g1/UDC
sleep 2
ls /sys/class/udc |head -n 1  | cat > /config/usb_gadget/g1/UDC
sleep 2
echo 2 > /sys/devices/virtual/android_usb/android0/port_mode
sleep 2

ifconfig -a

ifconfig lo 127.0.0.1 up
ifconfig ncm0 192.168.2.3 up
ifconfig usb0 192.168.2.3 up
ifconfig $(cat /config/usb_gadget/g1/functions/ncm.0/ifname) 192.168.2.3 up

sleep 5
echo > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/file
dmesg > /tmp/tmp-img
cat /sys/fs/pstore/* >> /tmp/tmp-img
find /dev >> /tmp/tmp-img
echo /tmp/tmp-img > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/file

(
set +x
while ! [ -f /dev/do-boot ];do
echo > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/file
dmesg > /tmp/tmp-img
echo /tmp/tmp-img > /config/usb_gadget/g1/functions/mass_storage.0/lun.0/file
sleep 20
done) &


mkdir -p /dev/block/mapper
ln -s /dev/mapper/control /dev/device-mapper
for i in $(cd /sys/devices/virtual/block/; echo dm-*);do
    name=$(cat /sys/devices/virtual/block/$i/dm/name)
    ln -s /dev/$i /dev/block/mapper/$name
done

PARTNAME=""
DEVNAME=""
mkdir -p /dev/block/by-name
for i in $(cd /sys/dev/block; echo *);do
    U=/sys/dev/block/$i/uevent
    PARTNAME=$(sed -nE 's/PARTNAME=//p' $U)
    DEVNAME=$(sed -nE 's/DEVNAME=//p' $U)
    if [ -n "$PARTNAME" ] && [ -n "$DEVNAME" ];then
        ln -s /dev/$DEVNAME /dev/block/by-name/$PARTNAME
    fi
    PARTNAME=""
    DEVNAME=""
done

if [ -b /dev/block/mapper/system_phh ];then
    mount -o ro /dev/block/mapper/system_phh /target
    mount -o move /target_tmp/dev /target/dev
    mount -o move /target_tmp/proc /target/proc
    mount -o move /target_tmp/sys /target/sys
    mount -o move /target_tmp/mnt /target/mnt
    mount -o move /target_tmp/debug_ramdisk /target/debug_ramdisk
    mount -o move /target_tmp/metadata /target/metadata
    mount -o move /target_tmp/vendor /target/vendor
    mount -o move /target_tmp/odm /target/odm
fi

(cat /proc/cmdline |tr -d '\n'; echo " " androidboot.selinux=permissive ) > /dev/cmdline
chmod 0400 /dev/cmdline
mount -o bind /dev/cmdline /target/proc/cmdline

while ! [ -f /dev/do-boot ];do
    sh <> /dev/ttyGS0 >&0 2>&1
    #setsid sh -c 'exec command <> /dev/ttyGS0 >&0 2>&1'
done

source /dev/do-boot

pkill -f mdev

cat /dev/kmsg > /dev/ttyGS0 &

sleep 5

cd /target
pivot_root /target debug_ramdisk
exec /debug_ramdisk/bin/busybox chroot . /system/bin/init selinux_setup

#telnetd -F

sleep 30
reboot
